apply plugin: 'com.android.library'
apply plugin: 'maven'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        ext.buildNumber = rootProject.ext.buildNumber
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        production {

        }
        integrationTest {
            buildConfigField 'String', 'API_BASE_URL', '"https://qa.ekstep.in/api"'
            buildConfigField 'String', 'API_USER', '"ekstep"'
            buildConfigField 'String', 'API_PASS', '"genie!"'
            buildConfigField 'String', 'GID', '"org.ekstep"'
        }
    }
    libraryVariants.all { variant ->
        def flavor = variant.mergedFlavor
        def name = flavor.getVersionName()
        def flavorName = variant.properties.get('flavorName')
        def versionName = name

        if (!flavorName.equals("production")) {
            versionName += flavorName;
        }
        if (variant.buildType.isDebuggable()) {
            versionName += '-debug';
        }
        flavor.versionName = versionName;
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, "genie-services-" + versionName + ".aar")
        }
    }
}



dependencies {
    compile project(':commons-lib')
    compile project(path: ':commons-services-lib')
    compile project(path: ':usermanagement-services-lib')
    compile project(path: ':config-services-lib')
    compile project(path: ':content-services-lib')
    compile project(path: ':partner-services-lib')
    compile project(path: ':notification-services-lib')

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.squareup.okhttp:okhttp:2.7.5"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$rootProject.ext.junitVersion"
}

def getRepositoryUsername() {
    return hasProperty('nexusUsername') ? nexusUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('nexusPassword') ? nexusPassword : ""
}

