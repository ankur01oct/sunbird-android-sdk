apply plugin: 'com.android.library'

android {
    defaultPublishConfig "productionRelease"
    publishNonDefault true
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        ext.buildNumber = rootProject.ext.buildNumber
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        production {

        }
        integrationTest {
            buildConfigField 'String', 'TELEMETRY_BASE_URL', '"https://qa.ekstep.in/api/data/v3"'
            buildConfigField 'String', 'LANGUAGE_PLATFORM_BASE_URL', '"https://qa.ekstep.in/api/language/v3"'
            buildConfigField 'String', 'TERMS_BASE_URL', '"https://qa.ekstep.in/api/domain/v3"'
            buildConfigField 'String', 'CONFIG_BASE_URL', '"https://qa.ekstep.in/api/meta/v3"'
            buildConfigField 'String', 'SEARCH_BASE_URL', '"https://qa.ekstep.in/api/composite/v3"'
            buildConfigField 'String', 'CONTENT_LISTING_BASE_URL', '"https://qa.ekstep.in/api/data/v3"'
            buildConfigField 'String', 'CONTENT_BASE_URL', '"https://qa.ekstep.in/api/content/v3"'
            buildConfigField 'String', 'APIGATEWAY_BASE_URL', '"https://qa.ekstep.in/api/api-manager/v1"'
            buildConfigField 'String', 'PRODUCER_ID', '"genie"'
            buildConfigField 'String', 'CHANNEL_ID', '"in.ekstep"'
            buildConfigField 'String', 'LOG_LEVEL', '"INFO"'
            buildConfigField 'String', 'QUALIFIER', '"org.ekstep.genie.qa"'
            buildConfigField 'String', 'PROFILE_CONFIG', '"org.ekstep.genie.base.ProfileConfig"'
            buildConfigField 'String', 'PLAYER_CONFIG', '"org.ekstep.genie.util.geniesdk.PlayerConfig"'
            buildConfigField 'String', 'MOBILE_APP_CONSUMER', '"mobile_device"'
            buildConfigField 'String', 'MOBILE_APP_KEY', '"genie-6.4"'
            buildConfigField 'String', 'MOBILE_APP_SECRET', '"2de97457fad846d5a60f7ac20773b6f4"'
        }
    }
    libraryVariants.all { variant ->
        def flavor = variant.mergedFlavor
        def name = flavor.getVersionName()
        def flavorName = variant.properties.get('flavorName')
        def versionName = name

        if (!flavorName.equals("production")) {
            versionName += flavorName;
        }
        if (variant.buildType.isDebuggable()) {
            versionName += '-debug';
        }
        flavor.versionName = versionName;
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, "genie-services-" + versionName + ".aar")
        }
    }
}

dependencies {
    compile project(path: ':config-services-lib')
    compile project(path: ':content-services-lib')
    compile project(path: ':notification-services-lib')
    compile project(path: ':partner-services-lib')
    compile project(path: ':usermanagement-services-lib')

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.google.android.gms:play-services-location:$rootProject.ext.playServiceVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"

    androidTestCompile 'com.jayway.awaitility:awaitility:1.7.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$rootProject.ext.junitVersion"
}
